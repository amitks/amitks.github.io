<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[BUG FACTORY]]></title>
  <link href="http://amitks.github.com/atom.xml" rel="self"/>
  <link href="http://amitks.github.com/"/>
  <updated>2013-04-06T20:52:04+05:30</updated>
  <id>http://amitks.github.com/</id>
  <author>
    <name><![CDATA[Amit Kumar Singh]]></name>
    <email><![CDATA[msnamit@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ATI Radeon 4330 configuration Ubuntu 12.10]]></title>
    <link href="http://amitks.github.com/blog/2013/04/06/ati-radeon-4330-configuration-ubuntu-12-dot-10/"/>
    <updated>2013-04-06T20:41:00+05:30</updated>
    <id>http://amitks.github.com/blog/2013/04/06/ati-radeon-4330-configuration-ubuntu-12-dot-10</id>
    <content type="html"><![CDATA[<p>Latest proprietary AMD Catalyst driver version 12.9 cannot be used with Ubuntu 12.10 If you have a AMD Radeon HD 2xxx-4xxx series card.</p>

<p>Drivers for these cards are now available in a separate branch called legacy series. Unfortunately these legacy drivers (version 12.6) have not been updated to work with Ubuntu 12.10. Ubuntu 12.10 comes with xorg 1.13 while these drivers have support for older xorg 1.12.</p>

<p>So if you want to install these drivers in Ubuntu 12.10, you have to downgrade to xorg 1.12. A PPA has been provided by Tomasz Makarewicz that includes all the required packages you need to downgrade plus a fglrx-legacy package.</p>

<p>To install these packages, run the following commands:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo add-apt-repository ppa:makson96/fglrx
</span><span class='line'>sudo apt-get update
</span><span class='line'>sudo apt-get upgrade
</span><span class='line'>sudo apt-get install fglrx-legacy
</span></code></pre></td></tr></table></div></figure>


<p>Do note that these packages are not officially supported by Ubuntu, so use them at your own risk. If something goes wrong, you can purge the packages by running following commands:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo apt-get install ppa-purge
</span><span class='line'>sudo ppa-purge ppa:makson96/fglrx
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Configuring java jre plugin for Firefox in Redhat/Centos 6]]></title>
    <link href="http://amitks.github.com/blog/2013/02/22/configuring-firefox-plugin-for-java-jre-in-redhat-slash-centos-6/"/>
    <updated>2013-02-22T15:05:00+05:30</updated>
    <id>http://amitks.github.com/blog/2013/02/22/configuring-firefox-plugin-for-java-jre-in-redhat-slash-centos-6</id>
    <content type="html"><![CDATA[<p>Download the latest Linux RPM (self-extracting file), currently jre-7u15-linux-i586.rpm, from <a href="java.com">java.com</a> then as root install and configure the alternatives system and plugins:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rpm -Uvh jre-7u15-linux-i586.rpm
</span><span class='line'>alternatives --config java
</span></code></pre></td></tr></table></div></figure>


<p>There are 2 programs which provide &#8216;java&#8217;.</p>

<figure class='code'><figcaption><span>&#8220;alternatives &#8211;config java&#8221; output</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>  Selection    Command
</span><span class='line'>
</span><span class='line'>*+ 1           /usr/lib/jvm/jre-1.6.0-openjdk/bin/java
</span><span class='line'>   2           /usr/lib/jvm/jre-1.5.0-gcj/bin/java
</span></code></pre></td></tr></table></div></figure>


<p> <br/>
Enter to keep the current selection[+], or type selection number:</p>

<p>Note use number of versions, N, For example, if 2 versions were installed then:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>alternatives --install /usr/bin/java java /usr/java/latest/bin/java 3
</span><span class='line'>alternatives --config java
</span></code></pre></td></tr></table></div></figure>


<p>There are 3 programs which provide &#8216;java&#8217;.</p>

<figure class='code'><figcaption><span>&#8220;alternatives &#8211;config java&#8221; output</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>  Selection    Command
</span><span class='line'>
</span><span class='line'>*+ 1           /usr/lib/jvm/jre-1.6.0-openjdk/bin/java
</span><span class='line'>   2           /usr/lib/jvm/jre-1.5.0-gcj/bin/java
</span><span class='line'>   3           /usr/java/latest/bin/java
</span></code></pre></td></tr></table></div></figure>


<p>Enter to keep the current selection[+], or type selection number: 3</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>java -version
</span></code></pre></td></tr></table></div></figure>


<p>java version &#8220;1.7.0_15&#8221;
Java(TM) SE Runtime Environment (build 1.7.0_15-b03)
Java HotSpot(TM) Server VM (build 23.7-b01, mixed mode)</p>

<p>Create links in the Mozilla Plugins directory so Java jre will show in firefox plugin option.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">cd</span> /usr/lib/mozilla/plugins/
</span><span class='line'>ln -fs /usr/java/latest/lib/i386/libnpjp2.so
</span></code></pre></td></tr></table></div></figure>


<p>Now Restart your browser and then click on Enable button to enable this plugin.Thats it you are all set.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[installing qemu and running xv6 on Centos/Redhat 6]]></title>
    <link href="http://amitks.github.com/blog/2013/02/08/installing-qemu-and-running-xv6/"/>
    <updated>2013-02-08T23:14:00+05:30</updated>
    <id>http://amitks.github.com/blog/2013/02/08/installing-qemu-and-running-xv6</id>
    <content type="html"><![CDATA[<h2>QEMU Emulator</h2>

<p>QEMU is a generic and open source machine emulator and virtualizer.</p>

<p>When used as a machine emulator, QEMU can run OSes and programs made for one machine (e.g. an ARM board) on a different machine (e.g. your own PC). By using dynamic translation, it achieves very good performance.</p>

<p>When used as a virtualizer, QEMU achieves near native performances by executing the guest code directly on the host CPU. QEMU supports virtualization when executing under the Xen hypervisor or using the KVM kernel module in Linux. When using KVM, QEMU can virtualize x86, server and embedded PowerPC, and S390 guests.</p>

<h2>xv6</h2>

<p>xv6 is a re-implementation of Dennis Ritchie&#8217;s and Ken Thompson&#8217;s Unix
Version 6 (v6).  xv6 loosely follows the structure and style of v6,
but is implemented for a modern x86-based multiprocessor using ANSI C.</p>

<h2>Installing QEMU</h2>

<p>get the current version of QEMU at <a href="http://wiki.qemu.org/Download">http://wiki.qemu.org/Download</a> or clone the git repository <code>git clone git://git.qemu-project.org/qemu.git</code>.if downloaded the tarball archieve then untar it.either way you have qemu on your system.Now before further proceeding we should check the requirements for installing QEMU.make sure these packages are installed if not you can&#8217;t proceed for the installation.</p>

<ul>
<li>SDL (This comes with installation DVD if not u may google it)</li>
<li>SDL-devel (This too comes with installation DVD)</li>
<li><a href="http://hammurabi.acc.umu.se/pub/gnome/sources/glib/2.12/glib-2.12.12.tar.bz2">glib</a></li>
<li><a href="http://pkgconfig.freedesktop.org/releases/pkg-config-0.22.tar.gz">pkg-config</a></li>
</ul>


<figure class='code'><figcaption><span>installation steps for QEMU</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">cd </span>qemu
</span><span class='line'>./configure
</span><span class='line'>make
</span><span class='line'>make install
</span></code></pre></td></tr></table></div></figure>


<h2>Running xv6</h2>

<p>Fetch xv6 source.The latest xv6 source is available via <code>git clone git://pdos.csail.mit.edu/xv6/xv6.git</code>.</p>

<figure class='code'><figcaption><span>check the path for qemu executables</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>which qemu-system-i386
</span></code></pre></td></tr></table></div></figure>


<p>Change the line containing <code>#QEMU</code> in xv6/Makefile to: <code>QEMU=/usr/local/bin/qemu-system-i386</code> (or ensure that qemu is in your path).
Go to the xv6 directory. Run following command to run xv6 inside Qemu.</p>

<figure class='code'><figcaption><span>Running xv6</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">cd </span>xv6
</span><span class='line'>make qemu
</span></code></pre></td></tr></table></div></figure>


<p>That&#8217;s it now enjoy xv6 inside QEMU emulator and learn the core of unix operating system.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A Demo facebook app for extracting user details]]></title>
    <link href="http://amitks.github.com/blog/2013/02/04/facebook-user-details-app/"/>
    <updated>2013-02-04T12:26:00+05:30</updated>
    <id>http://amitks.github.com/blog/2013/02/04/facebook-user-details-app</id>
    <content type="html"><![CDATA[<p>I have been thinking of extracting user details of a facebook profile(if we have user&#8217;s permission) and found this php script.you can create a facebook demo app to see the result.you &#8216;ll need to dump this script as <code>index.php</code> along with <code>facebook.php</code> and <code>base_facebook.php</code> to your hosting server.these files are available at <a href="https://github.com/facebook/php-sdk">github.com/facebook/php-sdk</a>.</p>

<p>currently i am hosting my app at <a href="https://heroku.com">heroku.com</a> you can also consider this for your need.heroku&#8217;s service is cool and most of them are free.</p>

<p>Now you will need to register a facebook app at <a href="https://developers.facebook.com">developers.facebook.com</a>.you will get a unique &#8216;appId&#8217; and &#8216;Secret&#8217;. put the exact values in the index.php and now your heroku app address(something like myapp.herokuapp.com once you have created it) while registering for the app at developers.facebook.com.</p>

<p>My Demo App is available at <a href="https://facebook-demo.herokuapp.com">Demo App</a>
below is the code for index.php. have Fun while creating your first Facebook App :)</p>

<figure class='code'><figcaption><span> (user-details.php)</span> <a href='http://amitks.github.com/data/code/user-details.php'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'>
</span><span class='line'><span class="k">require</span> <span class="s1">&#39;./facebook.php&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$facebook</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Facebook</span><span class="p">(</span><span class="k">array</span><span class="p">(</span>
</span><span class='line'><span class="s1">&#39;appId&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;&#39;</span><span class="p">,</span>
</span><span class='line'><span class="s1">&#39;secret&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;&#39;</span><span class="p">,</span>
</span><span class='line'><span class="s1">&#39;cookie&#39;</span> <span class="o">=&gt;</span> <span class="k">true</span><span class="p">,</span>
</span><span class='line'><span class="p">));</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$user_profile</span> <span class="o">=</span> <span class="k">null</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$user</span> <span class="o">=</span> <span class="nv">$facebook</span><span class="o">-&gt;</span><span class="na">getUser</span><span class="p">();</span>
</span><span class='line'><span class="nv">$loginUrl</span> <span class="o">=</span> <span class="nv">$facebook</span><span class="o">-&gt;</span><span class="na">getLoginUrl</span><span class="p">(</span>
</span><span class='line'><span class="k">array</span><span class="p">(</span>
</span><span class='line'>    <span class="s1">&#39;req_perms&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;email,publish_stream,user_birthday,read_stream&#39;</span>
</span><span class='line'>    <span class="p">));</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span><span class="p">(</span><span class="nv">$user</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nv">$user_profile</span><span class="o">=</span><span class="nv">$facebook</span><span class="o">-&gt;</span><span class="na">api</span><span class="p">(</span><span class="s1">&#39;/me&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="k">echo</span> <span class="s2">&quot;Welcome &quot;</span><span class="o">.</span><span class="nv">$user_profile</span><span class="p">[</span><span class="s1">&#39;name&#39;</span><span class="p">]</span> <span class="o">.</span><span class="s2">&quot;:&quot;</span><span class="p">;</span>
</span><span class='line'>          
</span><span class='line'>  <span class="k">echo</span> <span class="s2">&quot;Your Profile Summary.&lt;br /&gt;&quot;</span> <span class="p">;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  <span class="k">echo</span> <span class="s2">&quot;&lt;pre&gt;&quot;</span><span class="p">;</span> <span class="nb">print_r</span><span class="p">(</span><span class="nv">$user_profile</span><span class="p">);</span> <span class="k">echo</span> <span class="s2">&quot;&lt;/pre&gt;&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nv">$user</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>   <span class="k">echo</span> <span class="s2">&quot;&lt;script type=</span><span class="se">\&quot;</span><span class="s2">text/javascript</span><span class="se">\&quot;</span><span class="s2">&gt;</span><span class="se">\n</span><span class="s2">top.location.href = </span><span class="se">\&quot;</span><span class="si">$loginUrl</span><span class="se">\&quot;</span><span class="s2">;</span><span class="se">\n</span><span class="s2">&lt;/script&gt;&quot;</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span><span class='line'>
</span><span class='line'><span class="x">&lt;html&gt;</span>
</span><span class='line'><span class="x">&lt;title&gt;FACEBOOK USER DETAILS&lt;/title&gt;</span>
</span><span class='line'><span class="x">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CS 1.6 Memory Refresh]]></title>
    <link href="http://amitks.github.com/blog/2013/02/04/cs-1-dot-6-memory-refresh/"/>
    <updated>2013-02-04T10:57:00+05:30</updated>
    <id>http://amitks.github.com/blog/2013/02/04/cs-1-dot-6-memory-refresh</id>
    <content type="html"><![CDATA[<p>A nice bunny hop performed by russian jumper.refreshes my old memory of CS 1.6.
link is tagged below enjoy :)</p>

<div class="embed-video-container"><iframe src="http://www.youtube.com/embed/9Upa9ohg1AU "></iframe></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[wireshark sniffing]]></title>
    <link href="http://amitks.github.com/blog/2013/01/27/wireshark-sniffing/"/>
    <updated>2013-01-27T12:46:00+05:30</updated>
    <id>http://amitks.github.com/blog/2013/01/27/wireshark-sniffing</id>
    <content type="html"><![CDATA[<p>Password sniffing in unsecured networks.
5 min video worth checking it out.</p>

<div class="embed-video-container"><iframe src="http://www.youtube.com/embed/gxfkWLyvfkg "></iframe></div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[changing theme for octopress]]></title>
    <link href="http://amitks.github.com/blog/2013/01/26/changing-theme-for-octopress/"/>
    <updated>2013-01-26T23:46:00+05:30</updated>
    <id>http://amitks.github.com/blog/2013/01/26/changing-theme-for-octopress</id>
    <content type="html"><![CDATA[<p><strong>oo..yeah! it&#8217;s an octopress theme.</strong></p>

<p>I did a lot of customization for octopress default theme any way i wasn&#8217;t satisfied with the look.so thought of changing the default theme and i came to know about this one.it&#8217;s a cool theme designed for octopress/jekyll blogging.</p>

<p>installation steps:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">cd </span>octopress
</span><span class='line'>git clone https://github.com/wallace/justin-kelly-theme.git .themes/jk
</span><span class='line'>rake install<span class="o">[</span><span class="s1">&#39;jk&#39;</span><span class="o">]</span>
</span><span class='line'>rake generate
</span><span class='line'>rake deploy
</span></code></pre></td></tr></table></div></figure>


<p>
That&#8217;s it your New Theme is installed.But your existing customization will be deleted.if you want to add something in navigation menu try editing the file <code>_include/custom/navigation.html</code>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[packing an rpm without source code]]></title>
    <link href="http://amitks.github.com/blog/2013/01/18/packing-an-rpm-without-source-code/"/>
    <updated>2013-01-18T10:33:00+05:30</updated>
    <id>http://amitks.github.com/blog/2013/01/18/packing-an-rpm-without-source-code</id>
    <content type="html"><![CDATA[<p>Here we are creating an demo rpm for heroku-client.
To build an RPM, you must:</p>

<ul>
<li>Set up a directory hierarchy per the rpmbuild specifications.</li>
<li>Place your source code and or supplemental files in the proper locations in the hierarchy.</li>
<li>Create your spec file.</li>
<li>Build the RPM.</li>
</ul>


<p>You can optionally build a source RPM to share your source code with others.
To begin, build the hierarchy. In a directory in your home directory—say,
$HOME/rpmbuild.now create six subdirectories:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$mkdir</span> -p /home/amit/rpmbuild/BUILD BUILDROOT RPMS SOURCES SPECS SRPMS
</span></code></pre></td></tr></table></div></figure>


<p>now create a directory <code>heroku-client-1.0-el6.i386</code> inside BUILDROOT.
This directroy name should follow this format %{name}-%{version}-%{release}.{archiecture}
Now copy your scripts or files what ever your want to put inside the rpm like this:
/home/amit/rpmbuild/BUILDROOT/heroku-client-1.6-el6.i386/usr/local/heroku-client/
it means all the files and directory in side heroku directory will be added to the rpm.when you will install this rpm your installing location will be /usr/local/heroku-client/.
if you want the installed location inside /bin then directory structure will be look like this:
/home/amit/rpmbuild/BUILDROOT/heroku-client-1.6-el6.i386/bin/heroku-client/</p>

<p>Next, create the spec file. A spec file is nothing more than a text file with a special syntax.below is a sample spec file.</p>

<figure class='code'><figcaption><span> (heroku-client.spec)</span> <a href='http://amitks.github.com/data/code/heroku-client.spec'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="cp"># This is a sample spec file for dict-wn</span>
</span><span class='line'><span class="o">%</span><span class="n">define</span> <span class="n">_topdir</span>  <span class="o">/</span><span class="n">home</span><span class="o">/</span><span class="n">amit</span><span class="o">/</span><span class="n">rpmbuild</span><span class="o">/</span>
</span><span class='line'><span class="o">%</span><span class="n">define</span> <span class="n">name</span>         <span class="n">heroku</span><span class="o">-</span><span class="n">client</span>
</span><span class='line'><span class="o">%</span><span class="n">define</span> <span class="n">release</span>  <span class="n">el6</span>
</span><span class='line'><span class="o">%</span><span class="n">define</span> <span class="n">version</span>      <span class="mf">1.0</span>
</span><span class='line'><span class="o">%</span><span class="n">define</span> <span class="n">buildroot</span> <span class="o">%</span><span class="p">{</span><span class="n">_topdir</span><span class="p">}</span><span class="o">/%</span><span class="p">{</span><span class="n">name</span><span class="p">}</span><span class="o">-%</span><span class="p">{</span><span class="n">version</span><span class="p">}</span><span class="o">-</span><span class="n">root</span>
</span><span class='line'>
</span><span class='line'><span class="nl">BuildRoot:</span> <span class="o">%</span><span class="p">{</span><span class="n">buildroot</span><span class="p">}</span>
</span><span class='line'><span class="nl">Summary:</span>  <span class="n">heroku</span><span class="o">-</span><span class="n">client</span> <span class="n">a</span> <span class="n">command</span> <span class="n">line</span> <span class="n">interface</span> <span class="k">for</span> <span class="n">accessing</span> <span class="n">heroku</span> <span class="n">services</span>
</span><span class='line'><span class="nl">License:</span>  <span class="n">GPL</span>
</span><span class='line'><span class="nl">Name:</span>     <span class="o">%</span><span class="p">{</span><span class="n">name</span><span class="p">}</span>
</span><span class='line'><span class="nl">Version:</span>  <span class="o">%</span><span class="p">{</span><span class="n">version</span><span class="p">}</span>
</span><span class='line'><span class="nl">Release:</span>  <span class="o">%</span><span class="p">{</span><span class="n">release</span><span class="p">}</span>
</span><span class='line'><span class="cp">#Source:     %{name}-%{version}.tar.gz</span>
</span><span class='line'><span class="nl">Prefix:</span>       <span class="o">/</span><span class="n">usr</span>
</span><span class='line'><span class="nl">Group:</span>        <span class="n">Development</span><span class="o">/</span><span class="n">Tools</span>
</span><span class='line'><span class="o">%</span><span class="n">description</span>
</span><span class='line'><span class="n">heroku</span><span class="o">-</span><span class="n">client</span> <span class="n">is</span> <span class="n">a</span> <span class="n">command</span> <span class="n">line</span> <span class="n">interface</span> <span class="k">for</span> <span class="n">accessing</span> <span class="n">heroku</span> <span class="n">services</span><span class="p">.</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#%prep</span>
</span><span class='line'><span class="cp">#%setup -q</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#%build</span>
</span><span class='line'><span class="cp">#./configure</span>
</span><span class='line'><span class="cp">#make</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#%install</span>
</span><span class='line'><span class="cp">#make install prefix=$RPM_BUILD_ROOT/usr</span>
</span><span class='line'>
</span><span class='line'><span class="o">%</span><span class="n">files</span>
</span><span class='line'><span class="o">%</span><span class="n">defattr</span><span class="p">(</span><span class="o">-</span><span class="p">,</span><span class="n">root</span><span class="p">,</span><span class="n">root</span><span class="p">)</span>
</span><span class='line'><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">local</span><span class="o">/</span><span class="n">heroku</span><span class="o">-</span><span class="n">client</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="cp">#%doc %attr(0444,root,root) /usr/local/share/man/man1/rvm.1</span>
</span><span class='line'>
</span><span class='line'><span class="o">%</span><span class="n">post</span>
</span><span class='line'><span class="n">echo</span> <span class="s">&quot;export PATH </span>
</span><span class='line'><span class="n">PATH</span><span class="o">=</span><span class="s">&quot;/usr/local/heroku/bin:$PATH&quot;&quot;&gt;&gt;/home/amit/.bash_profile</span>
</span><span class='line'>
</span><span class='line'><span class="n">source</span> <span class="o">/</span><span class="n">home</span><span class="o">/</span><span class="n">amit</span><span class="o">/</span><span class="p">.</span><span class="n">bash_profile</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now let&#8217;s walk through spec file.
The %prep, %build, and %install sections are next, consecutively. Each section
generates a shell script that is embedded into the RPM and run subsequently as part
of the installation. %prep readies the source code, such as unpacking the tarball.
Here, %setup -q is a %prep macro to automatically unpack the tarball named in
Source.
The instructions in the %build section should look familiar. They are identical to the
steps you used to configure and launch the build manually. The %install section
is identical, too. However, while the target of the manual build was the actual
/usr/local directory of your system, the target of the %install instruction is
~/rpmbuild/BUILDROOT.
%files lists the files that should be bundled into the RPM and optionally sets
permissions and other information. Within %files, you can use the %defattr
macro to define the default permissions, owner, and group of files in the RPM; in this
example, %defattr(-,root,root) installs all the files owned by root, using
whatever permissions found when RPM bundled them up from the build system.
You can include multiple files per line in %files.
%post is a hook which will executes the codes after the installation of rpm.</p>

<p>We are not including few section of spec file because we are not building an rpm from source tar ball file.see the spec file.</p>

<p>now run below command as a non root user(avoid root preferably)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$rpmbuild</span> -v -ba SPECS/heroku-client.spec
</span></code></pre></td></tr></table></div></figure>


<p>-ba is for build all.Now your binary as well as source rpms are created inside RPMS and SOURCES directory.if only want to build binary then use -bb instead.</p>

<p>source:  <a href="http://www.ibm.com/developerworks/library/l-rpm1/">http://www.ibm.com/developerworks/library/l-rpm1/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Scientific Linux 6 Cool Background]]></title>
    <link href="http://amitks.github.com/blog/2012/12/12/scientific-linux-6-cool-background/"/>
    <updated>2012-12-12T06:50:00+05:30</updated>
    <id>http://amitks.github.com/blog/2012/12/12/scientific-linux-6-cool-background</id>
    <content type="html"><![CDATA[<p>This is a Cool Background picture of Scientific linux.I Love this Background so much could not stop my self to post it here.
<a href="http://ftp.scientificlinux.org/linux/scientific/graphics/version-3/backgrounds/Edge.of.Space/1280x1024_default.png">Download Link</a></p>

<p><img src="data/pics/sl6-background.jpg"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[resuming scp file transfer with rsync]]></title>
    <link href="http://amitks.github.com/blog/2012/12/06/resuming-scp-file-transfer-with-rsync/"/>
    <updated>2012-12-06T00:58:00+05:30</updated>
    <id>http://amitks.github.com/blog/2012/12/06/resuming-scp-file-transfer-with-rsync</id>
    <content type="html"><![CDATA[<p>I always loved using scp tool for file transfer over internet.but faced some draw back of using it while internet connection get disconnected and file download terminated.now problem is unable to resume from current position.so googled it and found a way out.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rsync -e ssh --partial user@remote-ip:/file-directory /home/myself/Downloads
</span></code></pre></td></tr></table></div></figure>


<p>Download will be resumed from that point where it was terminated by any reason.<code>-e ssh</code> indicates rsync to use ssh and <code>--partial</code> indicates for partial downloaded files.one more cool feature is that you can see the progress while file is being downloaded.it will show current download rate as well as progress of the file downloaded.For that use prefix <code>--progress</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rsync -e ssh --partial --progress user@remote-ip:/filedirectory /home/myself/download
</span></code></pre></td></tr></table></div></figure>


<p>if working with a directory use &#8220;-r&#8221;.
example:</p>

<figure class='code'><figcaption><span>dealing with file</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rsync -e ssh --partial --progress emacs@63.90.228.44:/home/emacs/goole_appengine.zip /home/redhat/Downloads
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span>dealing with directory</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rsync -e ssh --partial --progress -r emacs@63.90.228.44:/home/emacs/goole_appengine /home/redhat/Downloads
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Why do Passphrases matter]]></title>
    <link href="http://amitks.github.com/blog/2012/12/04/why-do-passphrases-matter/"/>
    <updated>2012-12-04T08:11:00+05:30</updated>
    <id>http://amitks.github.com/blog/2012/12/04/why-do-passphrases-matter</id>
    <content type="html"><![CDATA[<p>Passwords aren&#8217;t very secure,we already know this. If you use one that&#8217;s easy to remember, it&#8217;s easier to guess or brute-force (try many options until one works). If you use one that&#8217;s random it&#8217;s hard to remember, and thus you&#8217;re more inclined to write the password down. Both of these are Very Bad Things. This is why we&#8217;re using ssh keys.</p>

<p>But using a key without a passphrase is basically the same as writing down that random password in a file on your computer. Anyone who gains access to your drive has gained access to every system you use that key with. This is also a Very Bad Thing. The solution is obvious: add a passphrase.</p>

<p>But We don&#8217;t want to enter a long passphrase every time We use the key!</p>

<p>Thankfully, there&#8217;s a nifty little tool called ssh-agent that can save your passphrase securely so you don&#8217;t have to re-enter it. Most linux installations will automatically start ssh-agent for you when you log in.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Editors Compatibility With Octopress]]></title>
    <link href="http://amitks.github.com/blog/2012/12/03/editors-compatibility-with-octopress/"/>
    <updated>2012-12-03T02:44:00+05:30</updated>
    <id>http://amitks.github.com/blog/2012/12/03/editors-compatibility-with-octopress</id>
    <content type="html"><![CDATA[<p>There are Wordpress plugins to highlight code snippets and The WYSIWYG editor is nice, but very often you need to switch to the HTML editor to enter tags such as pre (to type the brush class) and even tt. Also, you don’t have control of how the HTML code looks because the editor keeps reformatting it. The main advantage of using Octopress is that I can use any editor I want.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[sound problem in DELL vostro 1088]]></title>
    <link href="http://amitks.github.com/blog/2012/11/23/sound-problem-in-DELL-vostro-1088/"/>
    <updated>2012-11-23T15:32:00+05:30</updated>
    <id>http://amitks.github.com/blog/2012/11/23/sound-problem-in-DELL-vostro-1088</id>
    <content type="html"><![CDATA[<p>I own a DELL-vostro-1088 Laptop.i have switched over linux in year 2009,every thing was ok with the installation of drivers except for one.Laptop&#8217;s audio jack was not working so no fun with any headfones or external Sound-Box.That time current version of alsa was 1.0.21 or 1.0.22  something like that.i tried upgrading with alsa 1.0.25 still no luck at all with sound output.
Googled a lot then i got some where close.i created a alsa.conf file inside <code>/etc/modprobe.d/</code> directory.then i did this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">echo</span> <span class="s2">&quot;options snd-hda-intel model=dell-vostro position_fix=0 enable=yes&quot;</span> &gt; /etc/modprobe.d/alsa.conf
</span></code></pre></td></tr></table></div></figure>


<p>it took some time because i was trying with <code>model=dell-vostro-1088</code> while above line was sufficient.anyway i rebooted the machine and was really surprised to see that my audio jack was working.Now i am enjoying my Creative Sound-Box.
Right now Fedora, ubuntu and some other distro has upgraded the version of alsa so no problem with audio drivers.
but Redhat-6/Centos-6 are still using alsa-1.0.21 so, i need to do above modifications in order to stay pain free.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Started Blogging with Octopress]]></title>
    <link href="http://amitks.github.com/blog/2012/11/22/starting-blogging-with-octopress/"/>
    <updated>2012-11-22T13:32:00+05:30</updated>
    <id>http://amitks.github.com/blog/2012/11/22/starting-blogging-with-octopress</id>
    <content type="html"><![CDATA[<p><strong>Hello Octopress</strong></p>

<p>It feels very nice to switch over Octopress.it is a blogging framework based on jekyll and desined in RUBY.Since there is no need of mysql or any similer type of database system it reduces your effort of management.Store all you data at Github in Flat Files.It&#8217;s the Feel of Freedom.But it still needs some tweaking to be done for the better look of Blog.</p>

<p>Thank you Tom Preston-Werner(for jekyll) and B mathis(for octopress).</p>
]]></content>
  </entry>
  
</feed>
